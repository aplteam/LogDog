[DATA]:index='Call from an application ⋄ Create instance, how to ⋄ Instance, how to create one'

# Call from an application

## Overview

Naturally the most important application of `Markdown2Help` is to use it from within an APL
application. This page explains how to do this.

(If you also want to put your help system on display independently from your application: that 
can be achieved with the help of `ViewHelp.exe` - see →[*.Standalone_Application] for details)

In order to call it from within your application you need to create an instance. Execute the
following steps:

* First you need to create a parameter space by calling the `→[*.CreateParms]` method.
* Then you set at least one parameter.
* Finally you call the `→[*.New]` method.


Example:

~~~
 ps←#.Markdown2Help.CreateParms ⍬
 ps.source←#.YourHelp
 #.Markdown2Help.New ps
~~~

`ps.source` specifies the namespace where the help system lives.

## Make the compiled files permanent

Because `ps.folderName` was not specified, `Markdown2Help` will save the compiled file within a temp folder.

That works but in  the long run you probably want to reuse the →[*.Compiled_File|compiled file]
once it has been created. There are two good reasons for that: It saves the time to convert the Markdown
variables into the help system --- can be substantial when you have many pages --- and you don't need the
MarkAPL class then anymore.

In order to make the compiled file permanent you must specify the `folderName` parameter.

There are more parameters available that come with reasonable default settings. Use the `∆List`
function to get an overview:

~~~
ps.∆List
~~~


