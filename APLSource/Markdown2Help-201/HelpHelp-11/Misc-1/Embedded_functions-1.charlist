[DATA]:index='Embedded functions ⋄ Functions, embedded'

# Embedded functions

One can embed functions into help pages: surround the function name by two pairs of three `⍎`.

The function must be either monadic or dyadic. The fully qualified name of the help page will always be passed as right argument.

Optionally you might specify something to the **right** of the function names as well; note that whatever it is, it will
be passed as the **left** argument.

## Examples

### First example

In this example a function `MyOwnFunction` is called. The function will be passed a right argument: the fully qualified name of
the help page the function was embedded into.

Note that the function **must** live in the same namespace as the help page since the name of the function is relative.

~~~
      # ⍎⍎⍎MyOwnFunction⍎⍎⍎
~~~

### Second example

In this example a function `##.MyOwnFunction` is called. The function will be passed a right and a left argument: 

 * The right argument is the fully qualified name of the help page the function was embedded into.
 * The left argument is the string <'John Doe'>. Note that the quotes are **part of the argument**!

Note that the function **must** live in the parent namespace of the namespace where the help page lives.

~~~
      # ⍎⍎⍎MyOwnFunction'John Doe'⍎⍎⍎
~~~

That means that the two quotes are not exactly needed. 

However, since a space is needed in any case between the function name and the start of the argument it might not be a bad 
idea to put a text vector between quotes and get rid of those quotes later
on. 

### Third example

In this example a function `##.MyOwnFunction` is called. The function will be passed a right and a left argument: 

 * The right argument is the fully qualified name of the help page the function was embedded into.
 * The left argument is the vector <1 2 3>.

Note that the function is fully qualified.

~~~
      # ⍎⍎⍎#.MyOwnFunction 1 2 3 ⍎⍎⍎
~~~
